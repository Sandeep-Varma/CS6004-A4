# ===========================================================================
# (c) Copyright IBM Corp. 2018, 2021 All Rights Reserved
# ===========================================================================
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# IBM designates this particular file as subject to the "Classpath" exception
# as provided by IBM in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, see <http://www.gnu.org/licenses/>.
# ===========================================================================

$(eval $(call SetupArchive,BUILD_DTFJ_JAR, , \
	SRCS := $(JDK_OUTPUTDIR)/classes, \
	INCLUDES := \
		com/ibm/dtfj \
		com/ibm/java/diagnostics/utils \
		com/ibm/jvm/j9/dump, \
	JAR := $(IMAGES_OUTPUTDIR)/lib/ext/dtfj.jar, \
	SKIP_METAINF := true))

$(eval $(call SetupArchive,BUILD_DTFJVIEW_JAR, , \
	SRCS := $(JDK_OUTPUTDIR)/classes, \
	INCLUDES := com/ibm/jvm/dtfjview, \
	JAR := $(IMAGES_OUTPUTDIR)/lib/ext/dtfjview.jar, \
	SKIP_METAINF := true))

TRACEFORMAT_TYPES := \
	com/ibm/jvm/Debug.class \
	com/ibm/jvm/FormatTimestamp.class \
	com/ibm/jvm/Indent.class \
	com/ibm/jvm/InputFile.class \
	com/ibm/jvm/MessageFile.class \
	com/ibm/jvm/OutputFile.class \
	com/ibm/jvm/ProgramOption.class \
	com/ibm/jvm/Statistics.class \
	com/ibm/jvm/Summary.class \
	com/ibm/jvm/Threads.class \
	com/ibm/jvm/Timezone.class \
	com/ibm/jvm/TraceFormat.class \
	com/ibm/jvm/Verbose.class \
	#

$(eval $(call SetupArchive,BUILD_TRACEFORMAT_JAR, , \
	SRCS := $(JDK_OUTPUTDIR)/classes, \
	INCLUDES := \
		com/ibm/jvm/format \
		com/ibm/jvm/trace, \
	EXTRA_FILES := \
		$(TRACEFORMAT_TYPES), \
	JAR := $(IMAGES_OUTPUTDIR)/lib/ext/traceformat.jar, \
	SKIP_METAINF := true))

JARS += $(patsubst %,$(IMAGES_OUTPUTDIR)/lib/ext/%.jar, dtfj dtfjview traceformat)

EXPORTED_PRIVATE_PKGS += \
	com.ibm.cuda \
	com.ibm.cuda.internal \
	com.ibm.dataaccess \
	com.ibm.gpu \
	com.ibm.java.lang.management.internal \
	com.ibm.jit \
	com.ibm.jvm \
	com.ibm.lang.management \
	com.ibm.lang.management.internal \
	com.ibm.le.conditionhandling \
	com.ibm.oti.lang \
	com.ibm.oti.reflect \
	com.ibm.oti.shared \
	com.ibm.oti.util \
	com.ibm.oti.vm \
	openj9.internal.tools.attach.target \
	com.ibm.virtualization.management \
	com.ibm.virtualization.management.internal \
	jdk.internal.org.objectweb.asm \
	jdk.internal.org.objectweb.asm.commons \
	jdk.internal.org.objectweb.asm.tree \
	jdk.internal.org.objectweb.asm.util \
	openj9.lang.management \
	openj9.lang.management.internal \
	openj9.internal.tools.attach.diagnostics.base \
	openj9.tools.attach.diagnostics.info \
	#

RT_JAR_EXCLUDES += \
	com/ibm/dtfj \
	com/ibm/java/diagnostics \
	$(TRACEFORMAT_TYPES) \
	com/ibm/jvm/dtfjview \
	com/ibm/jvm/format \
	com/ibm/jvm/j9 \
	com/ibm/jvm/trace \
	com/ibm/tools/attach/attacher \
	openj9/tools/attach/diagnostics/attacher \
	openj9/tools/attach/diagnostics/tools \
	#

OPENJ9_MANAGEMENT_PACKAGES := \
	com/ibm/java/lang/management/internal \
	com/ibm/lang/management \
	com/ibm/lang/management/internal \
	com/ibm/virtualization/management \
	com/ibm/virtualization/management/internal \
	openj9/lang/management \
	openj9/lang/management/internal \
	#

OPENJ9_MANAGEMENT_TYPES := \
	$(patsubst $(JDK_OUTPUTDIR)/classes/%, %, \
		$(foreach package, $(OPENJ9_MANAGEMENT_PACKAGES), \
			$(wildcard $(JDK_OUTPUTDIR)/classes/$(package)/*.class) \
	))

PROFILE_1_RTJAR_EXCLUDE_TYPES += $(OPENJ9_MANAGEMENT_TYPES)
PROFILE_2_RTJAR_EXCLUDE_TYPES += $(OPENJ9_MANAGEMENT_TYPES)
PROFILE_3_RTJAR_EXCLUDE_TYPES += # no extra exclusions

ifneq (,$(HEALTHCENTER_JAR))

JARS += $(IMAGES_OUTPUTDIR)/lib/ext/healthcenter.jar

$(IMAGES_OUTPUTDIR)/lib/ext/healthcenter.jar : $(JDK_OUTPUTDIR)/lib/ext/healthcenter.jar
	$(call install-file)

JARS += $(IMAGES_OUTPUTDIR)/lib/tools/monitoring-api.jar

$(IMAGES_OUTPUTDIR)/lib/tools/monitoring-api.jar : $(JDK_OUTPUTDIR)/lib/tools/monitoring-api.jar
	$(call install-file)

endif # HEALTHCENTER_JAR
